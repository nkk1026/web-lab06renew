{
  "version": 3,
  "sources": ["../../routes/articles.ts"],
  "sourcesContent": ["import Router, { RouterContext } from \"koa-router\";\nimport bodyParser from \"koa-bodyparser\"\nimport * as model from \"../models/articles\";\n\n// const articles = [\n//   { title: 'Hello article', fullText: 'some text to fill the body' },\n//   { title: 'another article', fullText: 'again here is some text here to fill' },\n//   { title: 'coventry university', fullText: 'some news about coventry university' },\n//   { title: 'smart campus', fullText: 'smart campus is coming to IVE' }\n// ];\n\nconst router = new Router({ prefix: '/api/v1/articles' });\n\nconst getAll = async (ctx: RouterContext, next: any) => {\n  let articles = await model.getAll();\n  if (articles.length) {\n    ctx.body = articles;\n  } else {\n    ctx.body = {};\n  }\n  await next();\n}\n\nconst createArticle = async (ctx: RouterContext, next: any) => {\n  /*let c: any = ctx.request.body;\n  let title = c.title;\n  let fullText = c.fullText;\n  let newArticle = {title: title, fullText: fullText};\n  articles.push(newArticle);\n  ctx.status = 201;\n  ctx.body = newArticle; */\n  const body = ctx.request.body;\n  let result = await model.add(body);\n  if (result.status == 201) {\n    ctx.status = 201;\n    ctx.body = body;\n  } else {\n    ctx.status = 500;\n    ctx.body = { err: \"insert data failed\" };\n  }\n  await next();\n}\n\n\nconst getById = async (ctx: RouterContext, next: any) => {\n  let id = +ctx.params.id;\n  /*if((id < articles.length +1) && (id>0)){\n    ctx.body = articles[id-1];\n  } else {\n    ctx.status = 404;\n  }*/\n  let article = await model.getById(id);\n  if (article.length) {\n    ctx.body = article[0];\n  } else {\n    ctx.status = 404;\n  }\n  await next();\n}\n\nconst updateArticle = async (ctx: RouterContext, next: any) => {\n  let id = +ctx.params.id;\n  //let {title, fullText} = ctx.request.body;\n  let c: any = ctx.request.body;\n  let title = c.title;\n  let fullText = c.fullText;\n  if ((id < articles.length+1) && (id > 0)) {\n    articles[id-1].title = title;\n    articles[id-1].fullText = fullText;\n    ctx.status = 200;    \n    ctx.body = articles;\n  } else {\n    ctx.status = 404;\n  }\n  await next();\n}\n\nconst deleteArticle = async (ctx: RouterContext, next: any) => {\n  let id = +ctx.params.id;\n  let article = await model.getById(id);\n  if((id < articles.length+1) && (id > 0)) {\n    articles.splice(id-1, 1);\n    ctx.status = 200;\n    ctx.body = articles;\n  } else {\n    ctx.status = 404;\n  }\n  await next();\n}\n\nrouter.get('/', getAll);\nrouter.post('/', bodyParser(), createArticle);\nrouter.get('/:id([0-9]{1,})', getById);\nrouter.put('/:id([0-9]{1,})', bodyParser(), updateArticle);\nrouter.delete('/:id([0-9]{1,})', deleteArticle);\n\nexport { router };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsC;AACtC,4BAAuB;AACvB,YAAuB;AASvB,MAAM,SAAS,IAAI,kBAAAA,QAAO,EAAE,QAAQ,mBAAmB,CAAC;AAExD,MAAM,SAAS,OAAO,KAAoB,SAAc;AACtD,MAAIC,YAAW,MAAM,MAAM,OAAO;AAClC,MAAIA,UAAS,QAAQ;AACnB,QAAI,OAAOA;AAAA,EACb,OAAO;AACL,QAAI,OAAO,CAAC;AAAA,EACd;AACA,QAAM,KAAK;AACb;AAEA,MAAM,gBAAgB,OAAO,KAAoB,SAAc;AAQ7D,QAAM,OAAO,IAAI,QAAQ;AACzB,MAAI,SAAS,MAAM,MAAM,IAAI,IAAI;AACjC,MAAI,OAAO,UAAU,KAAK;AACxB,QAAI,SAAS;AACb,QAAI,OAAO;AAAA,EACb,OAAO;AACL,QAAI,SAAS;AACb,QAAI,OAAO,EAAE,KAAK,qBAAqB;AAAA,EACzC;AACA,QAAM,KAAK;AACb;AAGA,MAAM,UAAU,OAAO,KAAoB,SAAc;AACvD,MAAI,KAAK,CAAC,IAAI,OAAO;AAMrB,MAAI,UAAU,MAAM,MAAM,QAAQ,EAAE;AACpC,MAAI,QAAQ,QAAQ;AAClB,QAAI,OAAO,QAAQ;AAAA,EACrB,OAAO;AACL,QAAI,SAAS;AAAA,EACf;AACA,QAAM,KAAK;AACb;AAEA,MAAM,gBAAgB,OAAO,KAAoB,SAAc;AAC7D,MAAI,KAAK,CAAC,IAAI,OAAO;AAErB,MAAI,IAAS,IAAI,QAAQ;AACzB,MAAI,QAAQ,EAAE;AACd,MAAI,WAAW,EAAE;AACjB,MAAK,KAAK,SAAS,SAAO,KAAO,KAAK,GAAI;AACxC,aAAS,KAAG,GAAG,QAAQ;AACvB,aAAS,KAAG,GAAG,WAAW;AAC1B,QAAI,SAAS;AACb,QAAI,OAAO;AAAA,EACb,OAAO;AACL,QAAI,SAAS;AAAA,EACf;AACA,QAAM,KAAK;AACb;AAEA,MAAM,gBAAgB,OAAO,KAAoB,SAAc;AAC7D,MAAI,KAAK,CAAC,IAAI,OAAO;AACrB,MAAI,UAAU,MAAM,MAAM,QAAQ,EAAE;AACpC,MAAI,KAAK,SAAS,SAAO,KAAO,KAAK,GAAI;AACvC,aAAS,OAAO,KAAG,GAAG,CAAC;AACvB,QAAI,SAAS;AACb,QAAI,OAAO;AAAA,EACb,OAAO;AACL,QAAI,SAAS;AAAA,EACf;AACA,QAAM,KAAK;AACb;AAEA,OAAO,IAAI,KAAK,MAAM;AACtB,OAAO,KAAK,SAAK,sBAAAC,SAAW,GAAG,aAAa;AAC5C,OAAO,IAAI,mBAAmB,OAAO;AACrC,OAAO,IAAI,uBAAmB,sBAAAA,SAAW,GAAG,aAAa;AACzD,OAAO,OAAO,mBAAmB,aAAa;",
  "names": ["Router", "articles", "bodyParser"]
}
