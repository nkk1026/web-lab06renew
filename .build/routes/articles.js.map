{
  "version": 3,
  "sources": ["../../routes/articles.ts"],
  "sourcesContent": ["import Router, {RouterContext} from \"koa-router\";\nimport bodyParser from \"koa-bodyparser\"\nconst articles = [\n  {title: 'Hello article', fullText: 'some text to fill the body'},\n  {title: 'another article', fullText: 'again here is some text here to fill'},\n  {title: 'coventry university', fullText: 'some news about coventry university'},\n  {title: 'smart campus', fullText: 'smart campus is coming to IVE'}\n];\nconst router = new Router({prefix: '/api/v1/articles'});\nconst getAll = async (ctx: RouterContext, next: any) => {\n  ctx.body = articles;\n  await next();\n}\nconst createArticle = async (ctx: RouterContext, next: any) => {\n  let c: any = ctx.request.body;\n  let title = c.title;\n  let fullText = c.fullText;\n  let newArticle = {title: title, fullText: fullText};\n  articles.push(newArticle);\n  ctx.status = 201;\n  ctx.body = newArticle;\n  await next();\n}\nconst getById = async (ctx: RouterContext, next: any) => {\n  let id = +ctx.params.id;\n  if((id < articles.length +1) && (id>0)){\n    ctx.body = articles[id-1];\n  } else {\n    ctx.status = 404;\n  }\n  await next();\n}\n\nconst updateArticle = async (ctx: RouterContext, next: any) => {\n  let id = +ctx.params.id;\n  //let {title, fullText} = ctx.request.body;\n  let c: any = ctx.request.body;\n  let title = c.title;\n  let fullText = c.fullText;\n  if ((id < articles.length+1) && (id > 0)) {\n    articles[id-1].title = title;\n    articles[id-1].fullText = fullText;\n    ctx.status = 200;    \n    ctx.body = articles;\n  } else {\n    ctx.status = 404;\n  }\n  await next();\n}\n\nconst deleteArticle = async (ctx: RouterContext, next: any) => {\n  let id = +ctx.params.id;\n  if((id < articles.length+1) && (id > 0)) {\n    articles.splice(id-1, 1);\n    ctx.status = 200;\n    ctx.body = articles;\n  } else {\n    ctx.status = 404;\n  }\n  await next();\n}\n\nrouter.get('/', getAll);\nrouter.post('/', bodyParser(),  createArticle);\nrouter.get('/:id([0-9]{1,})', getById);\nrouter.put('/:id([0-9]{1,})', updateArticle);\nrouter.put('/:id([0-9]{1,})', bodyParser(), updateArticle);\nrouter.delete('/:id([0-9]{1,})', deleteArticle);\n\nexport { router };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoC;AACpC,4BAAuB;AACvB,MAAM,WAAW;AAAA,EACf,EAAC,OAAO,iBAAiB,UAAU,6BAA4B;AAAA,EAC/D,EAAC,OAAO,mBAAmB,UAAU,uCAAsC;AAAA,EAC3E,EAAC,OAAO,uBAAuB,UAAU,sCAAqC;AAAA,EAC9E,EAAC,OAAO,gBAAgB,UAAU,gCAA+B;AACnE;AACA,MAAM,SAAS,IAAI,kBAAAA,QAAO,EAAC,QAAQ,mBAAkB,CAAC;AACtD,MAAM,SAAS,OAAO,KAAoB,SAAc;AACtD,MAAI,OAAO;AACX,QAAM,KAAK;AACb;AACA,MAAM,gBAAgB,OAAO,KAAoB,SAAc;AAC7D,MAAI,IAAS,IAAI,QAAQ;AACzB,MAAI,QAAQ,EAAE;AACd,MAAI,WAAW,EAAE;AACjB,MAAI,aAAa,EAAC,OAAc,SAAkB;AAClD,WAAS,KAAK,UAAU;AACxB,MAAI,SAAS;AACb,MAAI,OAAO;AACX,QAAM,KAAK;AACb;AACA,MAAM,UAAU,OAAO,KAAoB,SAAc;AACvD,MAAI,KAAK,CAAC,IAAI,OAAO;AACrB,MAAI,KAAK,SAAS,SAAQ,KAAO,KAAG,GAAG;AACrC,QAAI,OAAO,SAAS,KAAG;AAAA,EACzB,OAAO;AACL,QAAI,SAAS;AAAA,EACf;AACA,QAAM,KAAK;AACb;AAEA,MAAM,gBAAgB,OAAO,KAAoB,SAAc;AAC7D,MAAI,KAAK,CAAC,IAAI,OAAO;AAErB,MAAI,IAAS,IAAI,QAAQ;AACzB,MAAI,QAAQ,EAAE;AACd,MAAI,WAAW,EAAE;AACjB,MAAK,KAAK,SAAS,SAAO,KAAO,KAAK,GAAI;AACxC,aAAS,KAAG,GAAG,QAAQ;AACvB,aAAS,KAAG,GAAG,WAAW;AAC1B,QAAI,SAAS;AACb,QAAI,OAAO;AAAA,EACb,OAAO;AACL,QAAI,SAAS;AAAA,EACf;AACA,QAAM,KAAK;AACb;AAEA,MAAM,gBAAgB,OAAO,KAAoB,SAAc;AAC7D,MAAI,KAAK,CAAC,IAAI,OAAO;AACrB,MAAI,KAAK,SAAS,SAAO,KAAO,KAAK,GAAI;AACvC,aAAS,OAAO,KAAG,GAAG,CAAC;AACvB,QAAI,SAAS;AACb,QAAI,OAAO;AAAA,EACb,OAAO;AACL,QAAI,SAAS;AAAA,EACf;AACA,QAAM,KAAK;AACb;AAEA,OAAO,IAAI,KAAK,MAAM;AACtB,OAAO,KAAK,SAAK,sBAAAC,SAAW,GAAI,aAAa;AAC7C,OAAO,IAAI,mBAAmB,OAAO;AACrC,OAAO,IAAI,mBAAmB,aAAa;AAC3C,OAAO,IAAI,uBAAmB,sBAAAA,SAAW,GAAG,aAAa;AACzD,OAAO,OAAO,mBAAmB,aAAa;",
  "names": ["Router", "bodyParser"]
}
